<div class="container mt-2">
    <div class="row">
        <div class="col-md-8">
            <h3>お知らせ詳細</h3>
                <div class="font-weight-bold">地図検索</div>
                    <input id="address" type="textbox" value="GeekSalon">
                    <input type="button" value="検索" onclick="codeAddress()">  ※下記に記載されている住所を地図上のバーで検索してください。
                        <div id="display">検索結果が表示されます</div>
                            <div id='map'></div>

                            <style>
                                #map {
                                  height: 400px;
                                  width: 500px;
                                }
                            </style>

                            <script>
                                let map
                                let geocoder

                                const display = document.getElementById('display')

                                function initMap(){
                                  geocoder = new google.maps.Geocoder(),

                                  map = new google.maps.Map(document.getElementById('map'), {
                                    // latが緯度、lngが経度を示します
                                    center: {lat: 40.7828, lng:-73.9653},
                                    //数値は0〜21まで指定できます。数値が大きいほど拡大されます
                                    zoom: 10,
                                  });
                                  //positionに指定した座標にピンを表示させます
                                  marker = new google.maps.Marker({
                                    position:  {lat: 40.7828, lng:-73.9653},
                                    map: map
                                  });
                                }

                                  //検索フォームのボタンが押された時に実行される
                                function codeAddress(){
                                  //検索フォームの入力内容を取得
                                  let inputAddress = document.getElementById('address').value;

                                  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
                                    //該当する検索結果がヒットした時に、地図の中心を検索結果の緯度経度に更新する
                                    if (status == 'OK') {
                                      map.setCenter(results[0].geometry.location);
                                      var marker = new google.maps.Marker({
                                          map: map,
                                          position: results[0].geometry.location
                                      });
                                      display.textContent = "検索結果：" + results[ 0 ].geometry.location
                                    } else {
                                      //検索結果が何もなかった場合に表示
                                      alert('該当する結果がありませんでした：' + status);
                                    }
                                  });
                                }
                            </script>
                            <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap" async defer></script>

                    <div class="d-flex justify-center flex-wrap">
                        <div class="font-weight-bold"><i class="fa-solid fa-person-running text-danger"></i>避難場所：</div>
                            <div><%= @post.name %></div>
                    </div>
                    <div class="d-flex justify-center flex-wrap">
                        <div class="font-weight-bold"><i class="fa-solid fa-book-open text-danger"></i>説明：</div>
                            <div><%= render_with_tags(simple_format(@post.introduction,sanitize: true)) %></div>
                    </div>
                     <div class="d-flex justify-center flex-wrap">
                        <div class="font-weight-bold"><i class="fa-solid fa-house text-danger mr-2"></i>住所：</div>
                            <div><%= @post.address %></div>
                    </div>
                    <div class="d-flex justify-center flex-wrap">
                        <div class="font-weight-bold"><i class="fa-solid fa-calendar-days text-danger mr-2"></i>登録日：</div>
                            <div><%= @post.created_at.strftime('%Y/%m/%d  %H:%M') %></div>
                    </div>
<!--いいね表示-->
<div class="mt-2">
    <% if @post.liked_by?(current_customer) %>
        <p>  <!--いいね作成-->
          <%= link_to post_likes_path(@post), method: :delete, class: 'text-danger' do %>
            <i class="fa-solid fa-heart"></i><%= @post.likes.count %> いいね（ブックマーク）
          <% end %>
        </p>
        <% else %>
        <p>  <!--いいね削除-->
          <%= link_to post_likes_path(@post), method: :post, class: 'text-dark' do %>
            <i class="fa-regular fa-heart"></i><%= @post.likes.count %> いいね（ブックマーク）
          <% end %>
        </p>
    <% end %>
</div>


<!--コメント投稿-->
    <div class="mt-2">
        <%= form_with model: [@post, @comment], url: post_comments_path(@post) do |f| %>  <!--comment は、postに紐づくので、配列で書く-->
            <%= f.text_area :comment, size: "30x3" %>
            <%= f.submit "投稿" %>
        <% end %>
    </div>

<!--コメント表示-->
<i class="fa-regular fa-comments mt-2"></i><%= @post.comments.count %>コメント
    <% @post.comments.where(reply_comment:nil).each do |comment| %>
        <div style="width:55%" class="border-info border rounded m-1">
            <div class="d-flex justify-center flex-wrap">
                <p class="font-weight-bold mr-2">  <!--投稿者のIDと名前-->
                    [<%= comment.customer.id %>]
                    <%= comment.customer.last_name %><%= comment.customer.first_name %>
                </p>
                <div id="js-comment-<%= comment.id %>">  <!--投稿コメント-->
                    <%= render "public/comments/js_comment", comment: comment %>
                </div>
             </div>
                    <%= comment.created_at.strftime('%Y/%m/%d %H:%M') %>  <!--投稿日時-->

            <!--ログインしている本人のみ操作できるようにするための分岐-->
            <% if customer_signed_in? && (current_customer == comment.customer) %>
                <!--コメント削除には、@post（親）, @commentsのc に渡す必要がある-->
                <span data-comment-id=<%= comment.id %> class="js-edit-comment-button" >
                    <i class="fa-solid fa-pen-to-square ml-2 text-success"></i> 編集
                </span>

                <%= link_to post_comment_path(@post, comment), method: :delete, "data-confirm" => "本当に削除しますか？", class: 'text-danger' do %>
                    <i class="fa-solid fa-trash ml-2"></i> 削除
                <% end %>
            <% end %>
        </div>

<!--コメントへの返信を表示-->
    -----返信コメント-----<br>
    <% Comment.where(reply_comment: comment.id).each  do |reply_comment| %>
        <%= reply_comment.comment %><br>
        <%= comment.created_at.strftime('%Y/%m/%d %H:%M') %>
    <% end %>

<!--コメントに対して返信-->
    <%= form_with model: [@post, @comment], url: post_comments_path(@post) do |f| %>
        <div class="collapsible-body">
            <%= f.text_field :comment %>
            <!--ここ大事！hidden_fieldでフォーム無しに送信先コメントのidをreply_commentに追加-->
            <%= f.hidden_field :reply_comment, :value => comment.id  %>
            <%= button_tag type:"submit", class: "waves-effect waves-light btn" do %>
                <%= f.submit "返信する" %>
            <% end %>
        </div>
    <% end %>
<% end %>

        </div>
    </div>
</div>
